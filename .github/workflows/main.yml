name: Rust Multi-Platform Release

on:
  push:
    tags:
      - 'v*'   # 只有 push v 开头的 tag 时触发，例如 v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux 64-bit
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          # Windows 64-bit
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            ext: ".exe"
          # macOS Intel
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      # Windows 需要安装 mingw
      - name: Install mingw for Windows
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      # 打包二进制文件
      - name: Package binary
        run: |
          mkdir -p dist
          BIN_NAME="fil_scan${{ matrix.ext }}"
          cp target/${{ matrix.target }}/release/fil_scan${{ matrix.ext }} dist/$BIN_NAME
          # Linux/macOS 打 tar.gz，Windows 打 zip
          if [[ "${{ matrix.ext }}" == ".exe" ]]; then
            zip -j dist/fil_scan-windows.zip dist/$BIN_NAME
          elif [[ "${{ matrix.target }}" == *"linux"* ]]; then
            tar -czf dist/fil_scan-linux.tar.gz -C dist $BIN_NAME
          elif [[ "${{ matrix.target }}" == *"darwin"* ]]; then
            tar -czf dist/fil_scan-macos-${{ matrix.target }}.tar.gz -C dist $BIN_NAME
          fi

      # 上传 Release 资产
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
